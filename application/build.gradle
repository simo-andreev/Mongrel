apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//kapt {
//    generateStubs = true
//}
//idea {
//    module {
//        // Tell idea to mark the folder as generated sources
//        generatedSourceDirs += file("$buildDir/generated/source/kaptKotlin/")
//    }
//}
//sourceSets.main.java.srcDir file("$buildDir/generated/source/kaptKotlin/main/")

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
//    implementation('org.springframework.boot:spring-boot-starter-security')
//    implementation('org.springframework.boot:spring-security-web')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-web')

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

    implementation('org.springframework.session:spring-session-core')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation('org.springframework.security:spring-security-test')

    implementation "com.google.auto.service:auto-service:1.0-rc4"
    kapt "com.google.auto.service:auto-service:1.0-rc4"

    implementation project(':annotations')
    implementation project(':aprocessor')
    kapt project(':aprocessor')
}